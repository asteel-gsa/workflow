---
name: Auto Generate PR
on:
    # schedule:
    # - cron: '*/5 * * * *'
  workflow_call:
  workflow_dispatch:

jobs:
  check-commit:
    runs-on: ubuntu-latest
    name: Check For a Commit
    outputs:
        should_run: ${{ steps.should_run.outputs.should_run }}
    steps:
      - uses: actions/checkout@v3
      - name: print latest commit
        run: echo ${{ github.sha }}

      - name: Check if There Has Been A Commit
        id: should_run
        continue-on-error: false
        run: |
          sha=$(git rev-list --after="24 hours" ${{ github.sha }})
          if test -z $sha
          then
            echo "should_run=false" >> $GITHUB_OUTPUT
          else
            echo "should_run=true" >> $GITHUB_OUTPUT
          fi
        #run: test -z $(git rev-list  --after="24 hours"  ${{ github.sha }}) && echo "::set-output name=should_run::false"
        # run: |
        #     test -z $(git rev-list  --after="24 hours" ${{ github.sha }})
        #     echo "should_run=false" >> $GITHUB_OUTPUT

  pull-request:
    name: Create Pull Request
    needs: [check-commit]
    if: ${{ needs.check-commit.outputs.should_run != 'false' }}
    runs-on: ubuntu-latest
    outputs:
        pr_number: ${{ steps.open-pr.outputs.pr_number }}
    steps:
      - uses: actions/checkout@v3
      - name: Get Date
        id: date
        run: |
          echo "date=$(date +%Y-%m-%d)" >> $GITHUB_OUTPUT

      - name: Get Git short Commit
        id: git-short
        run: |
          echo "short_sha=$(git rev-parse --short ${{ github.sha }})" >> $GITHUB_OUTPUT

      - name: Open pull request
        uses: repo-sync/pull-request@v2
        id: open-pr
        with:
          source_branch: "main"
          destination_branch: "test"
          pr_title: "${{ steps.date.outputs.date }} ${{ steps.git-short.outputs.short_sha }} main -> test"
          pr_label: "automerge"
          pr_body: |
            This is an auto-generated PR to merge main into prod for a staging release for ${{ steps.date.outputs.date }}
            Last commit being merged: ${{ steps.git-short.outputs.short_sha }}
          pr_reviewer: 'ajsteel'
          pr_allow_empty: false
          github_token: ${{ secrets.GITHUB_TOKEN }}
          # github_token: ${{ secrets.GH_TOKEN_TEST_TWO }}

  # auto-approve:
  #   name: Auto Approve Created PR
  #   needs: [pull-request]
  #   if: ${{ needs.pull-request.outputs.pr_number != null }}
  #   runs-on: ubuntu-latest
  #   permissions:
  #       pull-requests: write
  #   steps:
  #     - uses: hmarr/auto-approve-action@v3
  #       with:
  #         pull-request-number: ${{ needs.pull-request.outputs.pr_number }}
  #         github-token: ${{ secrets.GITHUB_TOKEN }}

  # auto-merge:
  #   name: Auto Merge The Approved PR
  #   needs: [auto-approve, pull-request]
  #   if: ${{ needs.pull-request.outputs.pr_number != null }}
  #   runs-on: ubuntu-latest
  #   steps:
  #     - id: automerge
  #       name: automerge
  #       uses: pascalgn/automerge-action@v0.15.6
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #         MERGE_RETRIES: 50
  #         MERGE_RETRY_SLEEP: 30000
  #         MERGE_METHOD: merge
